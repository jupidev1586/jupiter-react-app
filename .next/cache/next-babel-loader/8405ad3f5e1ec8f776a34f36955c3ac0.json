{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\n\nclass ViewProductModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modal: false\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.props.onClick(this.state.modal);\n    });\n  }\n\n  render() {\n    let {\n      product\n    } = this.props;\n    console.log(product);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: `admin-product-modal view-product ${this.props.active}`\n    }, __jsx(\"div\", {\n      className: \"modal-innter-content\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: this.closeModal\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-x\"\n    }))), __jsx(\"div\", {\n      className: \"modal-body\"\n    }, __jsx(\"h3\", null, \"View Product\"), __jsx(\"div\", {\n      className: \"view-product-content\"\n    }, __jsx(\"div\", {\n      className: \"row align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-6\"\n    }, __jsx(\"div\", {\n      className: \"product-img\"\n    }, __jsx(\"img\", {\n      src: product.imageUrl,\n      className: \"main-image\",\n      alt: \"image\"\n    }), product.onSale ? __jsx(\"div\", {\n      className: \"sale-tag\"\n    }, \"Sale!\") : null, product.new ? __jsx(\"div\", {\n      className: \"new-tag\"\n    }, \"New!\") : null, product.discount ? __jsx(\"div\", {\n      className: \"discount\"\n    }, product.discountOff, \"% OFF\") : null)), __jsx(\"div\", {\n      className: \"col-lg-6\"\n    }, __jsx(\"div\", {\n      className: \"products-details-desc\"\n    }, __jsx(\"h3\", null, product.title), __jsx(\"p\", null, product.description), __jsx(\"div\", {\n      className: \"price\"\n    }, product.offer ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: \"old-price\"\n    }, \"$\", product.oldPrice), __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", product.newPrice)) : __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", product.oldPrice)), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"Availability:\"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, \"In stock (7 items)\"))), __jsx(\"li\", null, __jsx(\"span\", null, \"Product Type:\"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, product.type)))), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"Product Categories:\"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, \"product.type}\"))))))))))));\n  }\n\n}\n\nexport default ViewProductModal;","map":null,"metadata":{},"sourceType":"module"}