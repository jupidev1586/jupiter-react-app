{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { firebase } from '../../firebase';\nimport TopNavbar from '../../components/Admin/TopNavbar';\nimport LeftSidebar from '../../components/Admin/LeftSidebar';\nimport EditProductModal from '../../components/Admin/Modals/EditProductModal';\nimport ViewProductModal from '../../components/Admin/Modals/ViewProductModal';\nimport withAuth from '../../helpers/withAuth';\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      display: false,\n      products: [],\n      loading: true,\n      modalProduct: {\n        description: \"Sunnyme Women's Ponchos\",\n        discount: false,\n        discountOff: 0,\n        id: \"81tgigL0U2zUHoTj85Ht\",\n        imageHoverUrl: \"https://demaxin.s3.ap-south-1.amazonaws.com/img-hover8-1588705468374.jpg\",\n        imageUrl: \"https://demaxin.s3.ap-south-1.amazonaws.com/img8-1588705462376.jpg\",\n        newPrice: 200,\n        newProduct: false,\n        offer: true,\n        oldPrice: 210,\n        onSale: true,\n        title: \"Sunnyme Women's Ponchos\",\n        type: \"Women Clothes\"\n      }\n    });\n\n    _defineProperty(this, \"toggleEditProductModal\", () => {\n      this.setState({\n        EditProductModal: !this.state.EditProductModal\n      });\n    });\n\n    _defineProperty(this, \"toggleViewProductModal\", () => {\n      this.setState({\n        ViewProductModal: !this.state.ViewProductModal\n      });\n    });\n\n    _defineProperty(this, \"dataModal\", product => {\n      this.setState({\n        modalProduct: product\n      }); // console.log(product)\n    });\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n    const dbOrderRef = db.collection('products');\n    let productsArray = [];\n    dbOrderRef.get().then(res => {\n      // console.log(res)\n      res.forEach(doc => {\n        let productsObj = doc.data();\n        productsObj.id = doc.id;\n        productsArray.push(productsObj);\n      });\n      this.setState({\n        products: productsArray\n      });\n      this.loading = false;\n    }).catch(err => {\n      console.log('error', err);\n    });\n  }\n\n  render() {\n    let {\n      products\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(TopNavbar, null), __jsx(LeftSidebar, null), __jsx(\"div\", {\n      className: \"admin-main-content d-flex flex-column\"\n    }, __jsx(\"div\", {\n      className: \"page-header\"\n    }, __jsx(\"h2\", null, \"Products\")), __jsx(\"div\", {\n      className: \"admin-products\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, products.length ? products.map((product, idx) => __jsx(\"div\", {\n      key: idx,\n      className: \"col-lg-4 col-md-6 col-sm-6\"\n    }, __jsx(\"div\", {\n      className: \"single-products-box\"\n    }, __jsx(\"div\", {\n      className: \"products-image\"\n    }, __jsx(Link, {\n      href: \"#viewproduct\"\n    }, __jsx(\"a\", {\n      onClick: this.toggleViewProductModal\n    }, __jsx(\"img\", {\n      src: product.imageUrl,\n      className: \"main-image\",\n      alt: \"image\"\n    }), __jsx(\"img\", {\n      src: product.imageHoverUrl,\n      className: \"hover-image\",\n      alt: \"image\"\n    }))), product.onSale ? __jsx(\"div\", {\n      className: \"sale-tag\"\n    }, \"Sale!\") : null, product.new ? __jsx(\"div\", {\n      className: \"new-tag\"\n    }, \"New!\") : null, __jsx(\"div\", {\n      className: \"products-button\"\n    }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"wishlist-btn\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => {\n        e.preventDefault();\n        this.toggleViewProductModal();\n        this.dataModal(product);\n      }\n    }, __jsx(\"i\", {\n      className: \"bx bx-search-alt\"\n    }), __jsx(\"span\", {\n      className: \"tooltip-label\"\n    }, \"View\"))))), __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"compare-btn\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: this.toggleEditProductModal\n    }, __jsx(\"i\", {\n      className: \"bx bx-edit\"\n    }), __jsx(\"span\", {\n      className: \"tooltip-label\"\n    }, \"Edit\"))))), __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"quick-view-btn\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", null, __jsx(\"i\", {\n      className: \"bx bx-x\"\n    }), __jsx(\"span\", {\n      className: \"tooltip-label\"\n    }, \"Delete\")))))))), __jsx(\"div\", {\n      className: \"products-content\"\n    }, __jsx(\"h3\", null, product.title), __jsx(\"div\", {\n      className: \"price\"\n    }, product.offer ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: \"old-price\"\n    }, \"$\", product.oldPrice), __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", product.newPrice)) : __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", product.oldPrice)))))) : null)), __jsx(\"div\", {\n      className: \"flex-grow-1\"\n    })), __jsx(EditProductModal, {\n      onClick: this.toggleEditProductModal,\n      active: this.state.EditProductModal ? 'active' : ''\n    }), __jsx(ViewProductModal, {\n      onClick: this.toggleViewProductModal,\n      active: this.state.ViewProductModal ? 'active' : '',\n      product: this.state.modalProduct\n    }));\n  }\n\n}\n\nexport default withAuth(Products);","map":null,"metadata":{},"sourceType":"module"}