{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\n\nvar LineChart = /*#__PURE__*/function (_Component) {\n  _inherits(LineChart, _Component);\n\n  var _super = _createSuper(LineChart);\n\n  function LineChart() {\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: [[\"Month\", \"Sales\", \"Income\"], [\"15-Apr-2020\", 0, 0]],\n      months: new Array(),\n      options: {\n        title: \"Sales By Date\",\n        curveType: \"function\",\n        legend: {\n          position: \"bottom\"\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var arr = [];\n      this.props.data.map(function (a) {\n        arr.push(a);\n      });\n      arr.map(function (b, i) {\n        var t = new Date(1970, 0, 1);\n        var time = t.setSeconds(b.createdAt.seconds);\n        var ye = new Intl.DateTimeFormat('en', {\n          year: 'numeric'\n        }).format(time);\n        var mo = new Intl.DateTimeFormat('en', {\n          month: 'short'\n        }).format(time);\n        var da = new Intl.DateTimeFormat('en', {\n          day: '2-digit'\n        }).format(time);\n        var date = \"\".concat(da, \"-\").concat(mo, \"-\").concat(ye);\n\n        _this2.state.months.push(date);\n\n        var data = [_this2.state.months[i], b.amount, b.amount - b.amount / 2];\n\n        _this2.state.data.push(data);\n\n        console.log(_this2.state.months[i]);\n        console.log(i);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.data);\n\n      if (this.state.data) {\n        return __jsx(\"div\", {\n          className: \"chart-box\"\n        }, __jsx(Chart, {\n          chartType: \"LineChart\",\n          data: this.state.data,\n          options: this.state.options,\n          width: \"100%\",\n          height: \"500px\",\n          legendToggle: true\n        }));\n      }\n    }\n  }]);\n\n  return LineChart;\n}(Component);\n\nexport default LineChart;","map":null,"metadata":{},"sourceType":"module"}