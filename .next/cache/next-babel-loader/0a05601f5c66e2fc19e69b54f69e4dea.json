{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [[\"Month\", \"Sales\", \"Income\"], [\"15-Apr-2020\", 0, 0]],\n      months: new Array(),\n      options: {\n        title: \"Sales By Date\",\n        curveType: \"function\",\n        legend: {\n          position: \"bottom\"\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    let arr = [];\n    this.props.data.map(a => {\n      arr.push(a);\n    });\n    arr.map((b, i) => {\n      let t = new Date(1970, 0, 1);\n      let time = t.setSeconds(b.createdAt.seconds);\n      const ye = new Intl.DateTimeFormat('en', {\n        year: 'numeric'\n      }).format(time);\n      const mo = new Intl.DateTimeFormat('en', {\n        month: 'short'\n      }).format(time);\n      const da = new Intl.DateTimeFormat('en', {\n        day: '2-digit'\n      }).format(time);\n      let date = `${da}-${mo}-${ye}`;\n      this.state.months.push(date);\n      let data = [this.state.months[i], b.amount, b.amount - b.amount / 2];\n      this.state.data.push(data);\n      console.log(this.state.months[i]);\n      console.log(i);\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n\n    if (this.state.data) {\n      return __jsx(\"div\", {\n        className: \"chart-box\"\n      }, __jsx(Chart, {\n        chartType: \"LineChart\",\n        data: this.state.data,\n        options: this.state.options,\n        width: \"100%\",\n        height: \"500px\",\n        legendToggle: true\n      }));\n    }\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/Gianpaolo/WEB/_ENVato REACT/themeforest-2joexD7J-livani-react-next-ecommerce-store-template/livani-react-next-ecommerce-template/livani-react/components/Admin/LineChart.js"],"names":["React","Component","Chart","LineChart","data","months","Array","options","title","curveType","legend","position","componentDidMount","arr","props","map","a","push","b","i","t","Date","time","setSeconds","createdAt","seconds","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","date","state","amount","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\n\nclass LineChart extends Component {\n    state = {\n        data: [\n            [\"Month\", \"Sales\", \"Income\"],\n            [\"15-Apr-2020\", 0, 0]\n        ],\n        months: new Array(),\n        options: {\n            title: \"Sales By Date\",\n            curveType: \"function\",\n            legend: { position: \"bottom\" }\n        }\n    };\n\n    componentDidMount(){\n        let arr = [];\n        this.props.data.map(a => {\n            arr.push(a)\n        });\n        arr.map((b, i) => {\n            let t = new Date(1970, 0, 1);\n            let time = t.setSeconds(b.createdAt.seconds);\n            const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(time);\n            const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(time);\n            const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(time);\n            let date = `${da}-${mo}-${ye}`;\n            this.state.months.push(date);\n            let data = [this.state.months[i], b.amount, b.amount - b.amount / 2 ];\n            this.state.data.push(data);\n            console.log(this.state.months[i]);\n            console.log(i);\n        });\n    }\n\n    render(){\n        console.log(this.state.data)\n        if (this.state.data){\n            return (\n                <div className=\"chart-box\">\n                    <Chart\n                        chartType=\"LineChart\"\n                        data={this.state.data}\n                        options={this.state.options}\n                        width=\"100%\"\n                        height=\"500px\"\n                        legendToggle\n                    />\n                </div>\n            )\n        }\n    }\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}