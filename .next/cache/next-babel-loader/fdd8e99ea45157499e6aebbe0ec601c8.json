{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport Link from 'next/link';\nimport Payment from '../payments/Payment';\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleEmptyForm\", () => {\n      toast.error('Please fillup the form carefully', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n  }\n\n  render() {\n    let totalAmount = (this.props.total + this.props.shipping).toFixed(2);\n    let {\n      disabled\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"col-lg-6 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"order-details\"\n    }, __jsx(\"h3\", {\n      className: \"title\"\n    }, \"Your Order\"), __jsx(\"div\", {\n      className: \"order-table table-responsive\"\n    }, __jsx(\"table\", {\n      className: \"table table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Product Name\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Total\"))), __jsx(\"tbody\", null, this.props.products.map((data, idx) => __jsx(\"tr\", {\n      key: idx\n    }, __jsx(\"td\", {\n      className: \"product-name\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, data.title)), __jsx(\"td\", {\n      className: \"product-total\"\n    }, __jsx(\"span\", {\n      className: \"subtotal-amount\"\n    }, \"$\", data.newPrice * data.quantity)))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"order-subtotal\"\n    }, __jsx(\"span\", null, \"Cart Subtotal\")), __jsx(\"td\", {\n      className: \"order-subtotal-price\"\n    }, __jsx(\"span\", {\n      className: \"order-subtotal-amount\"\n    }, \"$\", this.props.total))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"order-shipping\"\n    }, __jsx(\"span\", null, \"Shipping\")), __jsx(\"td\", {\n      className: \"shipping-price\"\n    }, __jsx(\"span\", null, \"$30\"))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"total-price\"\n    }, __jsx(\"span\", null, \"Order Total\")), __jsx(\"td\", {\n      className: \"product-subtotal\"\n    }, __jsx(\"span\", {\n      className: \"subtotal-amount\"\n    }, \"$\", totalAmount)))))), __jsx(\"div\", {\n      className: \"payment-box\"\n    }, __jsx(\"div\", {\n      className: \"payment-method\"\n    }, __jsx(\"p\", null, __jsx(\"input\", {\n      type: \"radio\",\n      id: \"direct-bank-transfer\",\n      name: \"radio-group\",\n      defaultChecked: true\n    }), __jsx(\"label\", null, \"Direct Order\"), \"Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.\")), disabled ? __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: disabled ? 'default-btn disabled-btn' : 'default-btn',\n      onClick: e => {\n        e.preventDefault();\n        this.handleEmptyForm();\n      }\n    }, \"Place Order\")) : __jsx(Payment, {\n      amount: totalAmount * 100,\n      userData: this.props.stateData,\n      disabled: disabled\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":null,"metadata":{},"sourceType":"module"}