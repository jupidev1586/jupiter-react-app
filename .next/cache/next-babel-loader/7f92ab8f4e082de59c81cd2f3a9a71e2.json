{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { removeItem, addQuantity, subtractQuantity } from '../../store/actions/cartActions';\n\nclass CartTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleRemove\", id => {\n      this.props.removeItem(id);\n      toast.error('Removed from cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"handleAddQuantity\", id => {\n      this.props.addQuantity(id);\n    });\n\n    _defineProperty(this, \"handleSubtractQuantity\", id => {\n      this.props.subtractQuantity(id);\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n    });\n  }\n\n  render() {\n    let cartItems = this.props.products.length ? this.props.products.map((data, idx) => {\n      return __jsx(\"tr\", {\n        key: idx\n      }, __jsx(\"td\", {\n        className: \"product-thumbnail\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"img\", {\n        src: data.imageUrl,\n        alt: \"item\"\n      }))), __jsx(\"td\", {\n        className: \"product-name\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, data.title)), __jsx(\"td\", {\n        className: \"product-price\"\n      }, __jsx(\"span\", {\n        className: \"unit-amount\"\n      }, \"$\", data.newPrice)), __jsx(\"td\", {\n        className: \"product-quantity\"\n      }, __jsx(\"div\", {\n        className: \"input-counter\"\n      }, __jsx(\"span\", {\n        className: \"minus-btn\",\n        onClick: () => {\n          this.handleSubtractQuantity(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-minus\"\n      })), __jsx(\"input\", {\n        type: \"text\",\n        value: data.quantity,\n        min: \"1\",\n        max: 10,\n        readOnly: true,\n        onChange: e => e\n      }), __jsx(\"span\", {\n        className: \"plus-btn\",\n        onClick: () => {\n          this.handleAddQuantity(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-plus\"\n      })))), __jsx(\"td\", {\n        className: \"product-subtotal\"\n      }, __jsx(\"span\", {\n        className: \"subtotal-amount\"\n      }, \"$\", data.newPrice * data.quantity), __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        className: \"remove\",\n        onClick: e => {\n          e.preventDefault();\n          this.handleRemove(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-trash\"\n      })))));\n    }) : __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"product-thumbnail\",\n      colSpan: \"6\"\n    }, __jsx(\"p\", null, \"Empty.\")));\n    return __jsx(\"section\", {\n      className: \"cart-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"form\", null, __jsx(\"div\", {\n      className: \"cart-table table-responsive\"\n    }, __jsx(\"table\", {\n      className: \"table table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Product\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Name\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Unit Price\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Quantity\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Total\"))), __jsx(\"tbody\", null, cartItems))), __jsx(\"div\", {\n      className: \"cart-buttons\"\n    }, __jsx(\"div\", {\n      className: \"row align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(Link, {\n      href: \"/products-without-sidebar\"\n    }, __jsx(\"a\", {\n      className: \"optional-btn\"\n    }, \"Continue Shopping\"))), __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"cart-totals\"\n    }, __jsx(\"h3\", null, \"Cart Totals\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Subtotal \", __jsx(\"span\", null, \"$\", this.props.total.toFixed(2))), __jsx(\"li\", null, \"Shipping \", __jsx(\"span\", null, \"$30.00\")), __jsx(\"li\", null, \"Total \", __jsx(\"span\", null, \"$\", (this.props.total + 30).toFixed(2)))), __jsx(Link, {\n      href: \"/checkout\"\n    }, __jsx(\"a\", {\n      className: \"default-btn\"\n    }, \"Proceed to Checkout\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: id => {\n      dispatch(removeItem(id));\n    },\n    addQuantity: id => {\n      dispatch(addQuantity(id));\n    },\n    subtractQuantity: id => {\n      dispatch(subtractQuantity(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","map":null,"metadata":{},"sourceType":"module"}