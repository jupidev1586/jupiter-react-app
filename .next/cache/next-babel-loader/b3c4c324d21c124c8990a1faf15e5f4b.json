{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [[\"Month\", \"Sales\", \"Income\"], [\"15-Apr-2020\", 0, 0]],\n      months: new Array(),\n      options: {\n        title: \"Sales By Date\",\n        curveType: \"function\",\n        legend: {\n          position: \"bottom\"\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    let arr = [];\n    this.props.data.map(a => {\n      arr.push(a);\n    });\n    arr.map((b, i) => {\n      let t = new Date(1970, 0, 1);\n      let time = t.setSeconds(b.createdAt.seconds);\n      const ye = new Intl.DateTimeFormat('en', {\n        year: 'numeric'\n      }).format(time);\n      const mo = new Intl.DateTimeFormat('en', {\n        month: 'short'\n      }).format(time);\n      const da = new Intl.DateTimeFormat('en', {\n        day: '2-digit'\n      }).format(time);\n      let date = `${da}-${mo}-${ye}`;\n      this.state.months.push(date);\n      let data = [this.state.months[i], b.amount, b.amount - b.amount / 2];\n      this.state.data.push(data);\n      console.log(this.state.months[i]);\n      console.log(i);\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n\n    if (this.state.data) {\n      return __jsx(\"div\", {\n        className: \"chart-box\"\n      }, __jsx(Chart, {\n        chartType: \"LineChart\",\n        data: this.state.data,\n        options: this.state.options,\n        width: \"100%\",\n        height: \"500px\",\n        legendToggle: true\n      }));\n    }\n  }\n\n}\n\nexport default LineChart;","map":null,"metadata":{},"sourceType":"module"}